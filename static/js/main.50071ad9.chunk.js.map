{"version":3,"sources":["common/index.js","components/NavBar/cat.png","components/NavBar/index.jsx","components/GameData/index.jsx","App.js","index.js"],"names":["CardItem","key","title","gifSrc","imgSrc","this","CARD_DECK","levelToCardNum","level","scoreToLevel","score","levelToNum","scoreAtLevel","MAX_SCORE","cardDeck","sum","i","length","getMaxScore","pickCards","cardNum","slice","sort","Math","random","ScoreObj","currentScore","bestScore","current","best","NavBar","className","src","Cat","alt","GameData","App","useState","setScore","setLevel","maxScoreReached","setMaxScoreReached","checkAnswer","event","target","getAttribute","newBestScore","setCurrentCards","currentCards","useEffect","onClick","val","disabled","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50071ad9.chunk.js","sourcesContent":["function CardItem(key, title, gifSrc, imgSrc) {\n  this.key = key;\n  this.title = title;\n  this.gifSrc = gifSrc;\n  this.imgSrc = imgSrc;\n}\n\nconst CARD_DECK = [\n  new CardItem(\"holla\", \"Holla There\", \"\", \"\"),\n  new CardItem(\"wazap\", \"Whatsuuup\", \"\", \"\"),\n  new CardItem(\"fight\", \"Fight fight!\", \"\", \"\"),\n  new CardItem(\"awkward\", \"Awkwaaaard...\", \"\", \"\"),\n  new CardItem(\"saywhat\", \"Say Whaat???\", \"\", \"\"),\n  new CardItem(\"noway\", \"Nooo Wayy\", \"\", \"\"),\n  new CardItem(\"dead\", \"Dead\", \"\", \"\"),\n  /*new CardItem(\"shocked\", \"Shocked\", \"\", \"\"),\n  new CardItem(\"horriblelaugh\", \"Horrible Laugh\", \"\", \"\"),*/\n];\n\nconst levelToCardNum = (level) => {\n  return level * 2 + 1;\n};\n\nconst scoreToLevel = (score, levelToNum) => {\n  let level = 0;\n  let scoreAtLevel = 0;\n  while (scoreAtLevel <= score) {\n    level++;\n    scoreAtLevel += levelToNum(level);\n  }\n  return level;\n};\n\nconst getMaxScore = (cardDeck, levelToNum) => {\n  let sum = 0;\n  for (let i = 1; levelToNum(i) <= cardDeck.length; i++) {\n    sum += levelToNum(i);\n  }\n\n  return sum;\n};\n\nconst MAX_SCORE = getMaxScore(CARD_DECK, levelToCardNum);\n\nconst pickCards = (cardNum, cardDeck) => {\n  return cardDeck\n    .slice()\n    .sort(() => 0.5 - Math.random())\n    .slice(0, cardNum);\n};\n\nfunction ScoreObj(currentScore, bestScore) {\n  this.current = currentScore;\n  this.best = bestScore;\n}\n\nconst shuffleCards = (cards) => {\n  return cards.sort(() => 0.5 - Math.random());\n};\n\nexport {\n  CARD_DECK,\n  levelToCardNum,\n  pickCards,\n  ScoreObj,\n  shuffleCards,\n  MAX_SCORE,\n  scoreToLevel,\n};\n","export default __webpack_public_path__ + \"static/media/cat.f1560a6c.png\";","import \"./NavBar.scss\";\nimport Cat from \"./cat.png\";\n\nconst NavBar = () => {\n  return (\n    <header className=\"font-size-regular\">\n      <nav>\n        <div className=\"left-nav-wrapper\">\n          <img src={Cat} alt=\"Cat\" />\n          <span>What GIFs</span>\n        </div>\n        <div className=\"right-nav-wrapper\">How it works</div>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./GameData.scss\";\n\nconst GameData = ({ level, score }) => {\n  return (\n    <div className=\"game-data-wrapper font-size-regular\">\n      <div className=\"level\">Level: {level}</div>\n      <div className=\"score-wrapper\">\n        <span className=\"current-score\">Current score: {score.current}</span>\n        <span className=\"best-score\">Best score: {score.best}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default GameData;\n","import \"./App.scss\";\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  CARD_DECK,\n  levelToCardNum,\n  pickCards,\n  ScoreObj,\n  shuffleCards,\n  MAX_SCORE,\n  scoreToLevel,\n} from \"./common/index.js\";\n\nimport NavBar from \"./components/NavBar\";\nimport GameData from \"./components/GameData\";\n\nconst App = () => {\n  const [score, setScore] = useState(new ScoreObj(0, 0));\n  const [level, setLevel] = useState(scoreToLevel(0, levelToCardNum));\n  const [maxScoreReached, setMaxScoreReached] = useState(false);\n\n  const checkAnswer = (event) => {\n    if (event.target.getAttribute(\"val\") === \"1\") {\n      setScore(new ScoreObj(score.current + 1, score.best));\n    } else {\n      let newBestScore =\n        score.current > score.best ? score.current : score.best;\n      setScore(new ScoreObj(0, newBestScore));\n    }\n\n    setCurrentCards(shuffleCards(currentCards));\n  };\n\n  useEffect(() => {\n    if (score.current === MAX_SCORE) {\n      setScore(new ScoreObj(0, MAX_SCORE - 1));\n      setLevel(scoreToLevel(0, levelToCardNum));\n      setMaxScoreReached(true);\n    } else setLevel(scoreToLevel(score.current, levelToCardNum));\n  }, [score]);\n\n  const resetMaxScoreReached = (event) => {\n    setMaxScoreReached(false);\n  };\n\n  const [currentCards, setCurrentCards] = useState(\n    pickCards(levelToCardNum(level), CARD_DECK)\n  );\n  useEffect(() => {\n    setCurrentCards(pickCards(levelToCardNum(level), CARD_DECK));\n  }, [level]);\n\n  return (\n    <div>\n      <NavBar />\n      <GameData level={level} score={score} />\n      <button className=\"regular-font-size\" onClick={checkAnswer} val=\"1\">\n        Correct Answer\n      </button>\n      <button className=\"regular-font-size\" onClick={checkAnswer} val=\"0\">\n        Incorrect Answer\n      </button>\n      <button\n        className=\"regular-font-size\"\n        onClick={resetMaxScoreReached}\n        disabled={!maxScoreReached}\n      >\n        Reset maxScoreReached\n      </button>\n      <div>Current cards: {JSON.stringify(currentCards)}</div>\n      <div>Max score: {MAX_SCORE}</div>\n      <div>Max score reached? {maxScoreReached ? \"yes\" : \"no\"} </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"./common/selectors.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}